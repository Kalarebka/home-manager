TODO:
- refactoring & cleanup
- create a makefile for docker compose commands
- unit tests

For a working version:
- finish index page (not logged in - description of the page and picture with a sample board;
                     logged in: show welcome message and user's assigned tasks)
- htmx for board display (deleting, editing and changing status of a task)
- security - make sure nothing bad will happen if it goes online
- joining existing board mechanism
- ability to delete messages
- user list - show existing boards and button to join if current user doesn't have one
- messages - reply button
- registration - e-mail confirmation and recaptcha


Then:
- deployment


Improvements:
- https://djangopackages.org/grids/g/calendar/
- Use more generic view classes
- Django Crispy Forms
- Django Widget Tweaks
- use django.contrib.messages to show stuff
- make user profile prettier
- make the whole front-end prettier
- users able to have more than one board - show a default one on show board or show_board displays a list of boards?
or maybe a submenu in the navbar?
- shopping list
- calendar
- when there are lots of separate apps, maybe something in user profile or on user main page to sum things up? - I think in future versions it's what will happen on the index page after logging in
- maybe users should not be tied to boards, but be connected in groups, and then the group can have a board and select from other features?


with makefile:
```
$ sudo apt install make
$ git clone https://github.com/Kalarebka/home-manager.git
$ cd home-manager
$ make build
$ make start
$ docker exec -it home-manager bash
$ python3 manage.py migrate
$ python3 manage.py create superuser
$ python3 populate_db.py
```